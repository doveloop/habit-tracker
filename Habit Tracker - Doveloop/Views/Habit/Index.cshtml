@model IEnumerable<Habit_Tracker___Doveloop.Models.ViewModels.HabitViewModel>

@{
    ViewData["Title"] = "Index";
}
    <head>
    <link rel="stylesheet" type="text/css" href="/css/habitIndex.css" />
        
</head>
<span> Hi there</span>
<h1>Habits List</h1>


<p class ="addbutton">
    <a  asp-action="Create"  >+</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Habit.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Labels)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Habit.Name)
            </td>
            <td> <span>
                @{
                    
                    string labelNames = "";
                    foreach (var label in item.Labels)
                        labelNames += label.Name + ", ";
                    if (labelNames.Length == 0) labelNames = "No labels";
                    else labelNames = labelNames.Remove(labelNames.Length - 2, 2);
                    @labelNames;
                    
                }
                </span>
            </td>
            
            <td>
                <a asp-action="Edit" asp-route-id="@item.Habit.Id">Edit</a> 
                <a asp-action="Details" asp-route-id="@item.Habit.Id">Details</a> 
                <a asp-action="Delete" asp-route-id="@item.Habit.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<script>
    let getColorFromString = function (str) {
        let output = "#"
        let hash = 0
        let chr
        if (str.length = = = 0) return "#000"
        for (let i = 1; i <= 3; i++) {
            for (let j = (str.length / 3) * (i - 1); j < (str.length / 3) * i; j++) {
                chr = str.charCodeAt(j);
                hash = ((hash << 5) - hash) + chr;
                hash |= 0; // Convert to 32bit integer

            }
            let next = "00" + Math.abs(hash % 256).toString(16)
            next = next.slice(-2)

            output = `${output}${next}`
        }

        return output
    }


    let getTextColorFromBackground = function (background) {
        let output
        let red = parseInt(background.slice(1, 3), 16)
        let green = parseInt(background.slice(3, 5), 16)
        let blue = parseInt(background.slice(5, 7), 16)

        output = (red * 0.299 + green * 0.587 + blue * 0.114) > 150 ? "#000000" : "#ffffff"

        return output
    }

    let things = document.getElementsByTagName("span")

    for (let i = 0; i < things.length; i++) {
        let content = things[i].innerText
        let color = getColorFromString(content)

        things[i].style.backgroundColor = color
        things[i].style.color = getTextColorFromBackground(color)
    }
</script>
