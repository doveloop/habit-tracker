@model IEnumerable<Habit_Tracker___Doveloop.Models.ViewModels.HabitViewModel>
@{
    ViewData["Title"] = "Graphs";
}


<div class="text-center">
    <h1 class="display-4">Graphs Page</h1>
</div>

<form id="chart_filter">
    <label for="label_filter">Label</label>
    <input id="label_filter" />

    <label for="label_date_start">From...</label>
    <input id="label_date_start" type="datetime"/>
    <input id="label_date_end" type="datetime"/>
    <label for="label_date_end">...To</label>

    <input type="button" id="generate_graph_bar_week" value="Weekly Chart"/>
    <input type="button" id="generate_graph_bar" value="Bar Chart"/>
    <input type="button" id="generate_graph_pie" value="Pie Chart"/>
    <input type="button" id="generate_graph_line" value="Line Chart"/>
</form>

<h3 id="graph_title">Choose a Chart</h3>
<canvas id="graph_canvas" width="700px" height="500px"></canvas>

<script>
    let getAllHabits = function() 
    {
        let output = new Array()
        let scrubbedStr

        //Expected data structure 
        @foreach (Habit_Tracker___Doveloop.Models.ViewModels.HabitViewModel model in Model)
        {
            var data = new
            {
                id = model.Habit.Id,
                type = model.Habit.Type,
                user = model.Habit.User,
                name = model.Habit.Name,
                relationIds = model.Habit.RelationIds,
                labels = model.Labels.Select(l => new
                {
                    id = l.Id,
                    name = l.Name
                })
            };

            string objectString = System.Text.Json.JsonSerializer.Serialize(data);
              
            @:scrubbedStr = scrubQuotes("@objectString")

            @:output.push(JSON.parse(scrubbedStr));
        }

        return output
    }

</script>
