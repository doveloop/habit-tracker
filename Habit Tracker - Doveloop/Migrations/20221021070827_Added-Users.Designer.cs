// <auto-generated />
using System;
using Habit_Tracker___Doveloop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Habit_Tracker___Doveloop.Migrations
{
    [DbContext(typeof(HabitTrackerContext))]
    [Migration("20221021070827_Added-Users")]
    partial class AddedUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.Day", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Day");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.Habit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Habit");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.HabitDay", b =>
                {
                    b.Property<int>("HabitId")
                        .HasColumnType("int");

                    b.Property<int>("DayId")
                        .HasColumnType("int");

                    b.HasKey("HabitId", "DayId");

                    b.HasIndex("DayId");

                    b.ToTable("Habits_Days");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.HabitEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HabitId")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HabitId");

                    b.ToTable("HabitEntry");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.HabitLabel", b =>
                {
                    b.Property<int>("HabitId")
                        .HasColumnType("int");

                    b.Property<int>("LabelId")
                        .HasColumnType("int");

                    b.HasKey("HabitId", "LabelId");

                    b.HasIndex("LabelId");

                    b.ToTable("Habits_Labels");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Label");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.HabitDay", b =>
                {
                    b.HasOne("Habit_Tracker___Doveloop.Models.Day", "Day")
                        .WithMany("Habits")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Habit_Tracker___Doveloop.Models.Habit", "Habit")
                        .WithMany("Days")
                        .HasForeignKey("HabitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Day");

                    b.Navigation("Habit");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.HabitEntry", b =>
                {
                    b.HasOne("Habit_Tracker___Doveloop.Models.Habit", "Habit")
                        .WithMany("HabitEntries")
                        .HasForeignKey("HabitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habit");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.HabitLabel", b =>
                {
                    b.HasOne("Habit_Tracker___Doveloop.Models.Habit", "Habit")
                        .WithMany("Labels")
                        .HasForeignKey("HabitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Habit_Tracker___Doveloop.Models.Label", "Label")
                        .WithMany("Habits")
                        .HasForeignKey("LabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habit");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.Day", b =>
                {
                    b.Navigation("Habits");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.Habit", b =>
                {
                    b.Navigation("Days");

                    b.Navigation("HabitEntries");

                    b.Navigation("Labels");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.Label", b =>
                {
                    b.Navigation("Habits");
                });
#pragma warning restore 612, 618
        }
    }
}
