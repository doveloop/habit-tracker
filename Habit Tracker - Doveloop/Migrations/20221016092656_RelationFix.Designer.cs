// <auto-generated />
using System;
using Habit_Tracker___Doveloop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Habit_Tracker___Doveloop.Migrations
{
    [DbContext(typeof(HabitTrackerContext))]
    [Migration("20221016092656_RelationFix")]
    partial class RelationFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DayHabit", b =>
                {
                    b.Property<int>("DaysId")
                        .HasColumnType("int");

                    b.Property<int>("HabitsId")
                        .HasColumnType("int");

                    b.HasKey("DaysId", "HabitsId");

                    b.HasIndex("HabitsId");

                    b.ToTable("DayHabit");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.Day", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Day");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.Habit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Habit");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.HabitEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HabitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HabitId");

                    b.ToTable("HabitEntry");
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Label");
                });

            modelBuilder.Entity("HabitLabel", b =>
                {
                    b.Property<int>("HabitsId")
                        .HasColumnType("int");

                    b.Property<int>("LabelsId")
                        .HasColumnType("int");

                    b.HasKey("HabitsId", "LabelsId");

                    b.HasIndex("LabelsId");

                    b.ToTable("HabitLabel");
                });

            modelBuilder.Entity("DayHabit", b =>
                {
                    b.HasOne("Habit_Tracker___Doveloop.Models.Day", null)
                        .WithMany()
                        .HasForeignKey("DaysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Habit_Tracker___Doveloop.Models.Habit", null)
                        .WithMany()
                        .HasForeignKey("HabitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.HabitEntry", b =>
                {
                    b.HasOne("Habit_Tracker___Doveloop.Models.Habit", "Habit")
                        .WithMany("HabitEntries")
                        .HasForeignKey("HabitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habit");
                });

            modelBuilder.Entity("HabitLabel", b =>
                {
                    b.HasOne("Habit_Tracker___Doveloop.Models.Habit", null)
                        .WithMany()
                        .HasForeignKey("HabitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Habit_Tracker___Doveloop.Models.Label", null)
                        .WithMany()
                        .HasForeignKey("LabelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Habit_Tracker___Doveloop.Models.Habit", b =>
                {
                    b.Navigation("HabitEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
